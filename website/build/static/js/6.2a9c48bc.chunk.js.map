{"version":3,"sources":["components/Block/styles.ts","components/Block/index.tsx","components/Generator/styles.ts","components/Qrcode/index.tsx","components/Generator/index.tsx","common/Input/styles.ts","common/TextArea/styles.tsx","common/Input/index.tsx"],"names":["Content","styled","Container","TextWrapper","Block","title","content","GeneratorContainer","FormGroup","ButtonContainer","QRCode","require","Qrcode","elementID","data","id","style","width","height","display","justifyContent","alignItems","backgroundColor","padding","paddingLeft","paddingRight","paddingBottom","flexDirection","SvgIcon","src","marginTop","marginBottom","color","fontFamily","fontSize","estabName","borderRadius","value","_id","size","bgColor","fgColor","level","includeMargin","renderAs","imageSettings","x","y","domtoimage","Generator","useState","name","setName","email","setEmail","password","setPassword","number","setNumber","municipality","setMunicipality","barangay","setBarangay","setData","loading","setLoading","handleSubmit","a","axios","method","url","JSON","stringify","headers","then","resData","console","log","node","document","getElementById","toBlob","blob","myBlob","Blob","type","formnew","FormData","append","openNotificationWithIcon","notification","message","description","overflow","justify","align","lg","md","sm","xs","direction","autoComplete","onSubmit","e","preventDefault","span","Input","placeholder","onChange","target","Button","StyledInput","Label","htmlFor"],"mappings":"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","file":"static/js/6.2a9c48bc.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Content = styled(\"p\")`\r\n  margin-top: 1.5rem;\r\n`;\r\n\r\nexport const Container = styled(\"div\")`\r\n  position: relative;\r\n  max-width: 700px;\r\n`;\r\n\r\nexport const TextWrapper = styled(\"div\")`\r\n  border-radius: 3rem;\r\n  max-width: 400px;\r\n`;\r\n","import { Container, TextWrapper, Content } from \"./styles\";\r\n\r\ninterface Props {\r\n  title: string;\r\n  content: string;\r\n}\r\n\r\nconst Block = ({ title, content }: Props) => {\r\n  return (\r\n    <Container>\r\n      <h6>{title}</h6>\r\n      <TextWrapper>\r\n        <Content>{content}</Content>\r\n      </TextWrapper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Block;\r\n","import styled from \"styled-components\";\r\n\r\nexport const GeneratorContainer = styled(\"div\")`\r\n  padding: 5rem 0;\r\n\r\n  @media only screen and (max-width: 1024px) {\r\n    padding: 3rem 0;\r\n  }\r\n`;\r\n\r\nexport const FormGroup = styled(\"form\")`\r\n  width: 100%;\r\n  max-width: 520px;\r\n\r\n  @media only screen and (max-width: 1045px) {\r\n    max-width: 100%;\r\n    margin-top: 2rem;\r\n  }\r\n`;\r\n\r\nexport const Span = styled(\"span\")<any>`\r\n  display: block;\r\n  font-weight: 600;\r\n  color: rgb(255, 130, 92);\r\n  height: 0.775rem;\r\n  padding: 0 0.675rem;\r\n`;\r\n\r\nexport const ButtonContainer = styled(\"div\")`\r\n  text-align: end;\r\n  position: relative;\r\n\r\n  @media only screen and (max-width: 414px) {\r\n    padding-top: 0.75rem;\r\n  }\r\n`;\r\n","import { lazy } from \"react\";\nimport { SvgIcon } from \"../../common/SvgIcon\";\nimport { Main } from \"./styles\";\nconst QRCode = require(\"qrcode.react\");\n\nconst Qrcode = ({ elementID, data }: any) => {\n  return (\n    <div\n      id={elementID}\n      style={{\n        width: \"1000px\",\n        height: \"1300px\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        backgroundColor: \"#EFF3FA\",\n        padding: \"50px\",\n        paddingLeft: \"110px\",\n        paddingRight: \"110px\",\n        paddingBottom: \"80px\",\n        flexDirection: \"column\",\n      }}\n    >\n      <SvgIcon src=\"SureSafeLogo.png\" width=\"400px\" height=\"100px\" />\n      <h1\n        style={{\n          marginTop: \"120px\",\n          marginBottom: \"80px\",\n          color: \"#223141\",\n          fontFamily: \"Gilroy Extrabold\",\n          fontSize: \"70px\",\n        }}\n      >\n        {data?.estabName}\n      </h1>\n      <div\n        style={{\n          height: \"450px\",\n          width: \"450px\",\n          backgroundColor: \"#4ABEC6\",\n          borderRadius: \"50px\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <div\n          style={{\n            padding: 30,\n            borderRadius: \"20px\",\n            backgroundColor: \"#fff\",\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <QRCode\n            value={data?._id || 0}\n            size={300}\n            bgColor={\"#ffffff\"}\n            fgColor={\"#223141\"}\n            level={\"H\"}\n            includeMargin={false}\n            renderAs={\"canvas\"}\n            imageSettings={{\n              src: \"./img/svg/Logo.png\",\n              x: null,\n              y: null,\n              height: 100,\n              width: 100,\n            }}\n          />\n        </div>\n      </div>\n\n      <h1\n        style={{\n          marginTop: \"20px\",\n          marginBottom: \"80px\",\n          color: \"#63C9A8\",\n          fontFamily: \"Gilroy Extrabold\",\n          fontSize: \"50px\",\n        }}\n      >\n        Scan Me!\n      </h1>\n      <p style={{ fontSize: \"25px\" }}>\n        {`${data?.estabName} is supporting SureSafe in preventing COVID-19 from\n          spreading. Please Scan the QR Code above to log your visit Thank You!\n          Stay Safe!`}\n      </p>\n    </div>\n  );\n};\n\nexport default Qrcode;\n","import { useState } from \"react\";\r\nimport { Row, Col } from \"antd\";\r\nimport { Slide, Zoom } from \"react-awesome-reveal\";\r\nimport { GeneratorProps, ValidationTypeProps } from \"./types\";\r\nimport FormData from \"form-data\";\r\nimport axios from \"axios\";\r\nimport { useForm } from \"../../common/utils/useForm\";\r\nimport validate from \"../../common/utils/validationRules\";\r\nimport { Button } from \"../../common/Button\";\r\nimport { SvgIcon } from \"../../common/SvgIcon\";\r\nimport Block from \"../Block\";\r\nimport Input from \"../../common/Input\";\r\nimport { GeneratorContainer, FormGroup, Span, ButtonContainer } from \"./styles\";\r\nimport QRCode from \"../Qrcode\";\r\nimport { notification } from \"antd\";\r\nconst saveAs = require(\"file-saver\");\r\nconst domtoimage = require(\"dom-to-image\");\r\n\r\nconst Generator = ({ title, content, id }: GeneratorProps) => {\r\n  // const { values, errors, handleChange, handleSubmit } = useForm(\r\n  //   validate\r\n  // ) as any;\r\n\r\n  // const ValidationType = ({ type }: ValidationTypeProps) => {\r\n  //   const ErrorMessage = errors[type];\r\n  //   return (\r\n  //     <Zoom direction=\"left\">\r\n  //       <Span erros={errors[type]}>{ErrorMessage}</Span>\r\n  //     </Zoom>\r\n  //   );\r\n  // };\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n  const [municipality, setMunicipality] = useState(\"\");\r\n  const [barangay, setBarangay] = useState(\"\");\r\n  const [data, setData] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n  const handleSubmit = async () => {\r\n    setLoading(true);\r\n\r\n    axios({\r\n      method: \"post\",\r\n      url: `https://api.suresafe.me/suresafe/api/establishment/add`,\r\n      data: JSON.stringify({\r\n        email,\r\n        password,\r\n        name,\r\n        number,\r\n        municipality,\r\n        barangay,\r\n      }),\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    }).then(async (resData: any) => {\r\n      console.log(resData);\r\n      setData(resData.data.data);\r\n      let node = document.getElementById(\"qrcode\");\r\n      await domtoimage.toBlob(node).then((blob: any) => {\r\n        const myBlob = new Blob([blob], { type: \"image/png\" });\r\n\r\n        const formnew = new FormData();\r\n        formnew.append(\"qrcode\", myBlob, `${resData.data.data._id}.png`);\r\n        formnew.append(\"id\", resData.data.data._id);\r\n        formnew.append(\"number\", resData.data.data.number);\r\n        axios({\r\n          method: \"post\",\r\n          url: `https://api.suresafe.me/suresafe/api/establishment/qrcode`,\r\n          data: formnew,\r\n          headers: { \"Content-Type\": \"multipart/form-data\" },\r\n        }).then(async (data) => {\r\n          console.log(data);\r\n          openNotificationWithIcon();\r\n        });\r\n      });\r\n      setLoading(false);\r\n    });\r\n  };\r\n\r\n  const openNotificationWithIcon = () => {\r\n    notification[\"success\"]({\r\n      message: \"Success\",\r\n      description: \"Account successfully created.\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <GeneratorContainer id={id}>\r\n      <div style={{ overflow: \"hidden\", height: 0 }}>\r\n        <QRCode elementID=\"qrcode\" data={data} />\r\n      </div>\r\n      <Row justify=\"space-between\" align=\"middle\">\r\n        <Col lg={12} md={11} sm={24} xs={24}>\r\n          <Slide direction=\"left\">\r\n            <Block title={title} content={content} />\r\n            <Col lg={15} md={11} sm={12} xs={24}>\r\n              <SvgIcon src={\"Visits.png\"} width=\"100%\" height=\"100%\" />\r\n            </Col>\r\n          </Slide>\r\n        </Col>\r\n        <Col lg={12} md={12} sm={24} xs={24}>\r\n          <Slide direction=\"left\">\r\n            <FormGroup\r\n              autoComplete=\"off\"\r\n              onSubmit={(e) => {\r\n                e.preventDefault();\r\n                handleSubmit();\r\n              }}\r\n            >\r\n              <Col span={24}>\r\n                <Input\r\n                  type=\"email\"\r\n                  name=\"Email\"\r\n                  placeholder=\"Enter your email\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n              </Col>\r\n              <Col span={24}>\r\n                <Input\r\n                  type=\"password\"\r\n                  name=\"Password\"\r\n                  placeholder=\"Enter your Password\"\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n              </Col>\r\n              <Col span={24}>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"Establishment Name\"\r\n                  placeholder=\"Establishment Name\"\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                />\r\n              </Col>\r\n              <Col span={24}>\r\n                <div style={{ display: \"flex\" }}>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"Municipality\"\r\n                    placeholder=\"Municipality\"\r\n                    value={municipality}\r\n                    onChange={(e) => setMunicipality(e.target.value)}\r\n                  />\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"Barangay\"\r\n                    placeholder=\"Barangay\"\r\n                    value={barangay}\r\n                    onChange={(e) => setBarangay(e.target.value)}\r\n                  />\r\n                </div>\r\n              </Col>\r\n              <Col span={24}>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"Number\"\r\n                  placeholder=\"Contact Number\"\r\n                  value={number}\r\n                  onChange={(e) => setNumber(e.target.value)}\r\n                />\r\n              </Col>\r\n\r\n              <ButtonContainer>\r\n                <Button name=\"submit\">\r\n                  {loading ? \"Loading..\" : \"Create Now\"}\r\n                </Button>\r\n              </ButtonContainer>\r\n            </FormGroup>\r\n          </Slide>\r\n        </Col>\r\n      </Row>\r\n    </GeneratorContainer>\r\n  );\r\n};\r\n\r\nexport default Generator;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled(\"div\")`\r\n  display: inline-block;\r\n  width: 100%;\r\n  padding: 10px 5px;\r\n`;\r\n\r\nexport const StyledInput = styled(\"input\")`\r\n  font-size: 0.875rem;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledContainer = styled(\"div\")`\r\n  display: inline-block;\r\n  width: 100%;\r\n  padding: 10px 5px;\r\n  margin-bottom: -0.625rem;\r\n`;\r\n\r\nexport const StyledTextArea = styled(\"textarea\")`\r\n  resize: none;\r\n  font-size: 0.875rem;\r\n  height: 185px;\r\n`;\r\n\r\nexport const Label = styled(\"label\")`\r\n  display: block;\r\n  padding-bottom: 10px;\r\n  text-transform: capitalize;\r\n`;\r\n","import { Container, StyledInput } from \"./styles\";\r\nimport { Label } from \"../TextArea/styles\";\r\nimport { InputProps } from \"../types\";\r\n\r\nconst Input = ({ name, placeholder, onChange, type }: InputProps) => (\r\n  <Container>\r\n    <Label htmlFor={name}>{name}</Label>\r\n    <StyledInput\r\n      placeholder={placeholder}\r\n      name={name}\r\n      id={name}\r\n      onChange={onChange}\r\n      type={type}\r\n    />\r\n  </Container>\r\n);\r\n\r\nexport default Input;\r\n"],"sourceRoot":""}