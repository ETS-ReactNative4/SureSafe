{"version":3,"sources":["components/Block/styles.ts","components/Block/index.tsx","components/UserRegister/styles.ts","components/QRCodeUser/index.tsx","components/UserRegister/index.tsx","common/Input/styles.ts","common/TextArea/styles.tsx","common/Input/index.tsx"],"names":["Content","styled","Container","TextWrapper","Block","title","content","GeneratorContainer","FormGroup","ButtonContainer","QRCode","require","QrcodeUser","elementID","data","id","style","width","height","display","justifyContent","alignItems","backgroundColor","padding","paddingLeft","paddingRight","paddingBottom","flexDirection","SvgIcon","src","color","fontFamily","fontSize","margin","marginTop","firstName","lastName","toUpperCase","barangay","municipality","marginBottom","number","borderRadius","value","_id","size","bgColor","fgColor","level","includeMargin","renderAs","imageSettings","x","y","textAlign","domtoimage","UserRegister","useState","email","setEmail","password","setPassword","setFirstName","setLastName","setNumber","setMunicipality","setBarangay","setData","loading","setLoading","validId","setValidId","picture","setPicture","handleSubmit","a","form","FormData","append","axios","method","url","headers","then","resData","console","log","node","document","getElementById","toBlob","blob","myBlob","Blob","type","formnew","openNotificationWithIcon","notification","message","description","overflow","justify","align","lg","md","sm","xs","direction","autoComplete","onSubmit","e","preventDefault","span","Input","name","placeholder","onChange","target","files","Button","StyledInput","Label","htmlFor"],"mappings":"+HAEaA,EAAUC,YAAO,IAAPA,CAAH,mDAIPC,EAAYD,YAAO,MAAPA,CAAH,wEAKTE,EAAcF,YAAO,MAAPA,CAAH,yE,OCOTG,IAXD,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,QACtB,OACE,eAACJ,EAAD,WACE,6BAAKG,IACL,cAACF,EAAD,UACE,cAACH,EAAD,UAAUM,W,yMCVLC,EAAqBN,YAAO,MAAPA,CAAH,6HAQlBO,EAAYP,YAAO,OAAPA,CAAH,qKAkBTQ,GAROR,YAAO,OAAPA,CAAH,8IAQcA,YAAO,MAAPA,CAAH,yJ,OCzBtBS,EAASC,EAAQ,KAkHRC,EAhHI,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,UAAWC,EAAgB,EAAhBA,KAC/B,OACE,sBACEC,GAAIF,EACJG,MAAO,CACLC,MAAO,QACPC,OAAQ,QACRC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,gBAAiB,UACjBC,QAAS,OACTC,YAAa,QACbC,aAAc,QACdC,cAAe,OACfC,cAAe,UAbnB,UAgBE,cAACC,EAAA,EAAD,CAASC,IAAI,mBAAmBZ,MAAM,QAAQC,OAAO,SACrD,mBACEF,MAAO,CACLc,MAAO,UACPC,WAAY,mBACZC,SAAU,OACVC,OAAQ,EACRV,QAAS,EACTW,UAAW,QAPf,SAUG,iBAAGpB,QAAH,IAAGA,OAAH,EAAGA,EAAMqB,UAAT,mBAAsBrB,QAAtB,IAAsBA,OAAtB,EAAsBA,EAAMsB,UAAWC,gBAE1C,mBACErB,MAAO,CACLc,MAAO,UACPC,WAAY,eACZC,SAAU,OACVC,OAAQ,EACRV,QAAS,GANb,0BASMT,QATN,IASMA,OATN,EASMA,EAAMwB,SATZ,oBASyBxB,QATzB,IASyBA,OATzB,EASyBA,EAAMyB,gBAE/B,mBACEvB,MAAO,CACLc,MAAO,UACPC,WAAY,cACZC,SAAU,OACVC,OAAQ,EACRV,QAAS,EACTiB,aAAc,QAPlB,6BAUS1B,QAVT,IAUSA,OAVT,EAUSA,EAAM2B,UAEf,qBACEzB,MAAO,CACLE,OAAQ,QACRD,MAAO,QACPK,gBAAiB,UACjBoB,aAAc,OACdvB,QAAS,OACTC,eAAgB,SAChBC,WAAY,UARhB,SAWE,qBACEL,MAAO,CACLO,QAAS,GACTmB,aAAc,OACdpB,gBAAiB,OACjBH,QAAS,OACTC,eAAgB,SAChBC,WAAY,UAPhB,SAUE,cAACX,EAAD,CACEiC,OAAW,OAAJ7B,QAAI,IAAJA,OAAA,EAAAA,EAAM8B,MAAO,EACpBC,KAAM,IACNC,QAAS,UACTC,QAAS,UACTC,MAAO,IACPC,eAAe,EACfC,SAAU,SACVC,cAAe,CACbtB,IAAK,qBACLuB,EAAG,KACHC,EAAG,KACHnC,OAAQ,GACRD,MAAO,UAMf,oBACED,MAAO,CACLkB,UAAW,OACXM,aAAc,OACdV,MAAO,UACPC,WAAY,mBACZC,SAAU,QANd,sBAWA,mBAAGhB,MAAO,CAAEgB,SAAU,OAAQsB,UAAW,UAAzC,kF,SC9FAC,GADS5C,EAAQ,KACJA,EAAQ,MA8LZ6C,UA5LM,SAAC,GAA4C,IAA1CnD,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,QAASS,EAAyB,EAAzBA,GACtC,EAA0B0C,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAkCJ,mBAAS,IAA3C,mBAAOtB,EAAP,KAAkB2B,EAAlB,KACA,EAAgCL,mBAAS,IAAzC,mBAAOrB,EAAP,KAAiB2B,EAAjB,KACA,EAA4BN,mBAAS,IAArC,mBAAOhB,EAAP,KAAeuB,EAAf,KACA,EAAwCP,mBAAS,IAAjD,mBAAOlB,EAAP,KAAqB0B,EAArB,KACA,EAAgCR,mBAAS,IAAzC,mBAAOnB,EAAP,KAAiB4B,EAAjB,KACA,EAAwBT,qBAAxB,mBAAO3C,GAAP,KAAaqD,GAAb,KACA,GAA8BV,oBAAS,GAAvC,qBAAOW,GAAP,MAAgBC,GAAhB,MACA,GAA8BZ,qBAA9B,qBAAOa,GAAP,MAAgBC,GAAhB,MACA,GAA8Bd,mBAAqB,IAAnD,qBAAOe,GAAP,MAAgBC,GAAhB,MAEMC,GAAY,uCAAG,4BAAAC,EAAA,sDACnBN,IAAW,IACLO,EAAO,IAAIC,KACZC,OAAO,QAASpB,GACrBkB,EAAKE,OAAO,WAAYlB,GACxBgB,EAAKE,OAAO,YAAa3C,GACzByC,EAAKE,OAAO,WAAY1C,GACxBwC,EAAKE,OAAO,SAAUrC,GACtBmC,EAAKE,OAAO,eAAgBvC,GAC5BqC,EAAKE,OAAO,WAAYxC,GACxBsC,EAAKE,OAAO,UAAWR,GAAQ,IAC/BM,EAAKE,OAAO,UAAWN,GAAQ,IAE/BO,IAAM,CACJC,OAAQ,OACRC,IAAI,oDACJnE,KAAM8D,EACNM,QAAS,CAAE,eAAgB,yBAC1BC,KALH,+BAAAR,EAAA,MAKQ,WAAOS,GAAP,eAAAT,EAAA,6DACNU,QAAQC,IAAIF,GACZjB,GAAQiB,EAAQtE,KAAKA,MACjByE,EAAOC,SAASC,eAAe,cAH7B,SAIAlC,EAAWmC,OAAOH,GAAMJ,MAAK,SAACQ,GAClC,IAAMC,EAAS,IAAIC,KAAK,CAACF,GAAO,CAAEG,KAAM,cAElCC,EAAU,IAAIlB,IACpBkB,EAAQjB,OAAO,SAAUc,EAAzB,UAAoCR,EAAQtE,KAAKA,KAAK8B,IAAtD,SACAmD,EAAQjB,OAAO,KAAMM,EAAQtE,KAAKA,KAAK8B,KACvCmC,IAAM,CACJC,OAAQ,OACRC,IAAI,oDACJnE,KAAMiF,EACNb,QAAS,CAAE,eAAgB,yBAC1BC,KALH,+BAAAR,EAAA,MAKQ,WAAO7D,GAAP,SAAA6D,EAAA,sDACNU,QAAQC,IAAIxE,GACZkF,KAFM,2CALR,0DAVI,OAoBN3B,IAAW,GApBL,2CALR,uDAbmB,4CAAH,qDA0CZ2B,GAA2B,WAC/BC,IAAY,QAAY,CACtBC,QAAS,UACTC,YAAa,mCAIjB,OACE,eAAC5F,EAAD,CAAoBQ,GAAIA,EAAxB,UACE,qBAAKC,MAAO,CAAEoF,SAAU,SAAUlF,OAAQ,GAA1C,SACE,cAAC,EAAD,CAAYL,UAAU,aAAaC,KAAMA,OAE3C,eAAC,IAAD,CAAKuF,QAAQ,gBAAgBC,MAAM,SAAnC,UACE,cAAC,IAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAjC,SACE,eAAC,IAAD,CAAOC,UAAU,OAAjB,UACE,cAACvG,EAAA,EAAD,CAAOC,MAAOA,EAAOC,QAASA,IAC9B,cAAC,IAAD,CAAKiG,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAjC,SACE,cAAC9E,EAAA,EAAD,CAASC,IAAK,iBAAkBZ,MAAM,OAAOC,OAAO,gBAI1D,cAAC,IAAD,CAAKqF,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAjC,SACE,cAAC,IAAD,CAAOC,UAAU,OAAjB,SACE,eAACnG,EAAD,CACEoG,aAAa,MACbC,SAAU,SAACC,GACTA,EAAEC,iBACFrC,MAJJ,UAOE,cAAC,IAAD,CAAKsC,KAAM,GAAX,SACE,cAACC,EAAA,EAAD,CACEnB,KAAK,QACLoB,KAAK,QACLC,YAAY,mBACZxE,MAAOe,EACP0D,SAAU,SAACN,GAAD,OAAOnD,EAASmD,EAAEO,OAAO1E,YAGvC,cAAC,IAAD,CAAKqE,KAAM,GAAX,SACE,cAACC,EAAA,EAAD,CACEnB,KAAK,WACLoB,KAAK,WACLC,YAAY,sBACZxE,MAAOiB,EACPwD,SAAU,SAACN,GAAD,OAAOjD,EAAYiD,EAAEO,OAAO1E,YAG1C,cAAC,IAAD,CAAKqE,KAAM,GAAX,SACE,sBAAKhG,MAAO,CAAEG,QAAS,QAAvB,UACE,cAAC8F,EAAA,EAAD,CACEnB,KAAK,OACLoB,KAAK,aACLC,YAAY,aACZxE,MAAOR,EACPiF,SAAU,SAACN,GAAD,OAAOhD,EAAagD,EAAEO,OAAO1E,UAEzC,cAACsE,EAAA,EAAD,CACEnB,KAAK,OACLoB,KAAK,YACLC,YAAY,YACZxE,MAAOP,EACPgF,SAAU,SAACN,GAAD,OAAO/C,EAAY+C,EAAEO,OAAO1E,eAI5C,cAAC,IAAD,CAAKqE,KAAM,GAAX,SACE,cAACC,EAAA,EAAD,CACEnB,KAAK,OACLoB,KAAK,SACLC,YAAY,iBACZxE,MAAOF,EACP2E,SAAU,SAACN,GAAD,OAAO9C,EAAU8C,EAAEO,OAAO1E,YAGxC,cAAC,IAAD,CAAKqE,KAAM,GAAX,SACE,sBAAKhG,MAAO,CAAEG,QAAS,QAAvB,UACE,cAAC8F,EAAA,EAAD,CACEnB,KAAK,OACLoB,KAAK,eACLC,YAAY,eACZxE,MAAOJ,EACP6E,SAAU,SAACN,GAAD,OAAO7C,EAAgB6C,EAAEO,OAAO1E,UAE5C,cAACsE,EAAA,EAAD,CACEnB,KAAK,OACLoB,KAAK,WACLC,YAAY,WACZxE,MAAOL,EACP8E,SAAU,SAACN,GAAD,OAAO5C,EAAY4C,EAAEO,OAAO1E,eAI5C,cAAC,IAAD,CAAKqE,KAAM,GAAX,SACE,cAACC,EAAA,EAAD,CACEnB,KAAK,OACLoB,KAAK,WACLC,YAAY,WACZxE,MAAO2B,GACP8C,SAAU,SAACN,GACT,IACMhG,EADSgG,EAAEO,OACGC,MACpB/C,GAAWzD,QAIjB,cAAC,IAAD,CAAKkG,KAAM,GAAX,SACE,cAACC,EAAA,EAAD,CACEnB,KAAK,OACLoB,KAAK,UACLC,YAAY,UACZxE,MAAO6B,GACP4C,SAAU,SAACN,GACT,IACMhG,EADSgG,EAAEO,OACGC,MACpB7C,GAAW3D,QAKjB,cAACL,EAAD,UACE,cAAC8G,EAAA,EAAD,CAAQL,KAAK,SAAb,SACG9C,GAAU,YAAc,kC,4DCjM9BlE,EAAYD,YAAO,MAAPA,CAAH,4FAMTuH,EAAcvH,YAAO,QAAPA,CAAH,oDCOXwH,GAbkBxH,YAAO,MAAPA,CAAH,yHAOEA,YAAO,WAAPA,CAAH,uFAMNA,YAAO,QAAPA,CAAH,wG,OCEHgH,IAbD,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,YAAaC,EAAtB,EAAsBA,SAAUtB,EAAhC,EAAgCA,KAAhC,OACZ,eAAC5F,EAAD,WACE,cAACuH,EAAD,CAAOC,QAASR,EAAhB,SAAuBA,IACvB,cAACM,EAAD,CACEL,YAAaA,EACbD,KAAMA,EACNnG,GAAImG,EACJE,SAAUA,EACVtB,KAAMA","file":"static/js/10.1900a955.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Content = styled(\"p\")`\r\n  margin-top: 1.5rem;\r\n`;\r\n\r\nexport const Container = styled(\"div\")`\r\n  position: relative;\r\n  max-width: 700px;\r\n`;\r\n\r\nexport const TextWrapper = styled(\"div\")`\r\n  border-radius: 3rem;\r\n  max-width: 400px;\r\n`;\r\n","import { Container, TextWrapper, Content } from \"./styles\";\r\n\r\ninterface Props {\r\n  title: string;\r\n  content: string;\r\n}\r\n\r\nconst Block = ({ title, content }: Props) => {\r\n  return (\r\n    <Container>\r\n      <h6>{title}</h6>\r\n      <TextWrapper>\r\n        <Content>{content}</Content>\r\n      </TextWrapper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Block;\r\n","import styled from \"styled-components\";\r\n\r\nexport const GeneratorContainer = styled(\"div\")`\r\n  padding: 5rem 0;\r\n\r\n  @media only screen and (max-width: 1024px) {\r\n    padding: 3rem 0;\r\n  }\r\n`;\r\n\r\nexport const FormGroup = styled(\"form\")`\r\n  width: 100%;\r\n  max-width: 520px;\r\n\r\n  @media only screen and (max-width: 1045px) {\r\n    max-width: 100%;\r\n    margin-top: 2rem;\r\n  }\r\n`;\r\n\r\nexport const Span = styled(\"span\")<any>`\r\n  display: block;\r\n  font-weight: 600;\r\n  color: rgb(255, 130, 92);\r\n  height: 0.775rem;\r\n  padding: 0 0.675rem;\r\n`;\r\n\r\nexport const ButtonContainer = styled(\"div\")`\r\n  text-align: end;\r\n  position: relative;\r\n\r\n  @media only screen and (max-width: 414px) {\r\n    padding-top: 0.75rem;\r\n  }\r\n`;\r\n","import { lazy } from \"react\";\nimport { SvgIcon } from \"../../common/SvgIcon\";\nimport { Main } from \"./styles\";\nconst QRCode = require(\"qrcode.react\");\n\nconst QrcodeUser = ({ elementID, data }: any) => {\n  return (\n    <div\n      id={elementID}\n      style={{\n        width: \"500px\",\n        height: \"800px\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        backgroundColor: \"#EFF3FA\",\n        padding: \"50px\",\n        paddingLeft: \"110px\",\n        paddingRight: \"110px\",\n        paddingBottom: \"80px\",\n        flexDirection: \"column\",\n      }}\n    >\n      <SvgIcon src=\"SureSafeLogo.png\" width=\"200px\" height=\"50px\" />\n      <p\n        style={{\n          color: \"#223141\",\n          fontFamily: \"Gilroy Extrabold\",\n          fontSize: \"30px\",\n          margin: 0,\n          padding: 0,\n          marginTop: \"40px\",\n        }}\n      >\n        {`${data?.firstName} ${data?.lastName}`.toUpperCase()}\n      </p>\n      <p\n        style={{\n          color: \"#223141\",\n          fontFamily: \"Gilroy Light\",\n          fontSize: \"18px\",\n          margin: 0,\n          padding: 0,\n        }}\n      >\n        {`${data?.barangay}, ${data?.municipality}`}\n      </p>\n      <p\n        style={{\n          color: \"#4ABEC6\",\n          fontFamily: \"Gilroy Bold\",\n          fontSize: \"18px\",\n          margin: 0,\n          padding: 0,\n          marginBottom: \"20px\",\n        }}\n      >\n        {`+63${data?.number}`}\n      </p>\n      <div\n        style={{\n          height: \"300px\",\n          width: \"300px\",\n          backgroundColor: \"#4ABEC6\",\n          borderRadius: \"50px\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <div\n          style={{\n            padding: 30,\n            borderRadius: \"20px\",\n            backgroundColor: \"#fff\",\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <QRCode\n            value={data?._id || 0}\n            size={250}\n            bgColor={\"#ffffff\"}\n            fgColor={\"#223141\"}\n            level={\"H\"}\n            includeMargin={false}\n            renderAs={\"canvas\"}\n            imageSettings={{\n              src: \"./img/svg/Logo.png\",\n              x: null,\n              y: null,\n              height: 70,\n              width: 70,\n            }}\n          />\n        </div>\n      </div>\n\n      <h1\n        style={{\n          marginTop: \"20px\",\n          marginBottom: \"40px\",\n          color: \"#63C9A8\",\n          fontFamily: \"Gilroy Extrabold\",\n          fontSize: \"30px\",\n        }}\n      >\n        Scan Me!\n      </h1>\n      <p style={{ fontSize: \"15px\", textAlign: \"center\" }}>\n        {`Show this ID to any establishments that using the suresafe app! `}\n      </p>\n    </div>\n  );\n};\n\nexport default QrcodeUser;\n","import { useState } from \"react\";\nimport { Row, Col } from \"antd\";\nimport { Slide, Zoom } from \"react-awesome-reveal\";\nimport FormData from \"form-data\";\nimport axios from \"axios\";\nimport { GeneratorProps, ValidationTypeProps } from \"./types\";\nimport { useForm } from \"../../common/utils/useForm\";\nimport validate from \"../../common/utils/validationRules\";\nimport { Button } from \"../../common/Button\";\nimport { SvgIcon } from \"../../common/SvgIcon\";\nimport Block from \"../Block\";\nimport Input from \"../../common/Input\";\nimport { GeneratorContainer, FormGroup, Span, ButtonContainer } from \"./styles\";\nimport QrcodeUser from \"../QRCodeUser\";\nimport { notification } from \"antd\";\nconst saveAs = require(\"file-saver\");\nconst domtoimage = require(\"dom-to-image\");\n\nconst UserRegister = ({ title, content, id }: GeneratorProps) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const [municipality, setMunicipality] = useState(\"\");\n  const [barangay, setBarangay] = useState(\"\");\n  const [data, setData] = useState();\n  const [loading, setLoading] = useState(false);\n  const [validId, setValidId] = useState<any | null>();\n  const [picture, setPicture] = useState<any | null>(\"\");\n\n  const handleSubmit = async () => {\n    setLoading(true);\n    const form = new FormData();\n    form.append(\"email\", email);\n    form.append(\"password\", password);\n    form.append(\"firstName\", firstName);\n    form.append(\"lastName\", lastName);\n    form.append(\"number\", number);\n    form.append(\"municipality\", municipality);\n    form.append(\"barangay\", barangay);\n    form.append(\"validId\", validId[0]);\n    form.append(\"picture\", picture[0]);\n\n    axios({\n      method: \"post\",\n      url: `https://api.suresafe.me/suresafe/api/users/create`,\n      data: form,\n      headers: { \"Content-Type\": \"multipart/form-data\" },\n    }).then(async (resData) => {\n      console.log(resData);\n      setData(resData.data.data);\n      let node = document.getElementById(\"qrcodeuser\");\n      await domtoimage.toBlob(node).then((blob: any) => {\n        const myBlob = new Blob([blob], { type: \"image/png\" });\n\n        const formnew = new FormData();\n        formnew.append(\"qrcode\", myBlob, `${resData.data.data._id}.png`);\n        formnew.append(\"id\", resData.data.data._id);\n        axios({\n          method: \"post\",\n          url: `https://api.suresafe.me/suresafe/api/users/qrcode`,\n          data: formnew,\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        }).then(async (data) => {\n          console.log(data);\n          openNotificationWithIcon();\n        });\n      });\n      setLoading(false);\n    });\n  };\n\n  const openNotificationWithIcon = () => {\n    notification[\"success\"]({\n      message: \"Success\",\n      description: \"Account successfully created!\",\n    });\n  };\n\n  return (\n    <GeneratorContainer id={id}>\n      <div style={{ overflow: \"hidden\", height: 0 }}>\n        <QrcodeUser elementID=\"qrcodeuser\" data={data} />\n      </div>\n      <Row justify=\"space-between\" align=\"middle\">\n        <Col lg={12} md={11} sm={24} xs={24}>\n          <Slide direction=\"left\">\n            <Block title={title} content={content} />\n            <Col lg={15} md={11} sm={12} xs={24}>\n              <SvgIcon src={\"GeoTracing.png\"} width=\"100%\" height=\"100%\" />\n            </Col>\n          </Slide>\n        </Col>\n        <Col lg={12} md={12} sm={24} xs={24}>\n          <Slide direction=\"left\">\n            <FormGroup\n              autoComplete=\"off\"\n              onSubmit={(e) => {\n                e.preventDefault();\n                handleSubmit();\n              }}\n            >\n              <Col span={24}>\n                <Input\n                  type=\"email\"\n                  name=\"Email\"\n                  placeholder=\"Enter your email\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                />\n              </Col>\n              <Col span={24}>\n                <Input\n                  type=\"password\"\n                  name=\"Password\"\n                  placeholder=\"Enter your Password\"\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                />\n              </Col>\n              <Col span={24}>\n                <div style={{ display: \"flex\" }}>\n                  <Input\n                    type=\"text\"\n                    name=\"First Name\"\n                    placeholder=\"First Name\"\n                    value={firstName}\n                    onChange={(e) => setFirstName(e.target.value)}\n                  />\n                  <Input\n                    type=\"text\"\n                    name=\"Last Name\"\n                    placeholder=\"Last Name\"\n                    value={lastName}\n                    onChange={(e) => setLastName(e.target.value)}\n                  />\n                </div>\n              </Col>\n              <Col span={24}>\n                <Input\n                  type=\"text\"\n                  name=\"Number\"\n                  placeholder=\"Contact Number\"\n                  value={number}\n                  onChange={(e) => setNumber(e.target.value)}\n                />\n              </Col>\n              <Col span={24}>\n                <div style={{ display: \"flex\" }}>\n                  <Input\n                    type=\"text\"\n                    name=\"Municipality\"\n                    placeholder=\"Municipality\"\n                    value={municipality}\n                    onChange={(e) => setMunicipality(e.target.value)}\n                  />\n                  <Input\n                    type=\"text\"\n                    name=\"Barangay\"\n                    placeholder=\"Barangay\"\n                    value={barangay}\n                    onChange={(e) => setBarangay(e.target.value)}\n                  />\n                </div>\n              </Col>\n              <Col span={24}>\n                <Input\n                  type=\"file\"\n                  name=\"Valid ID\"\n                  placeholder=\"Valid ID\"\n                  value={validId}\n                  onChange={(e) => {\n                    const target = e.target as HTMLInputElement;\n                    const data = target.files;\n                    setValidId(data);\n                  }}\n                />\n              </Col>\n              <Col span={24}>\n                <Input\n                  type=\"file\"\n                  name=\"Picture\"\n                  placeholder=\"Picture\"\n                  value={picture}\n                  onChange={(e) => {\n                    const target = e.target as HTMLInputElement;\n                    const data = target.files;\n                    setPicture(data);\n                  }}\n                />\n              </Col>\n\n              <ButtonContainer>\n                <Button name=\"submit\">\n                  {loading ? \"Loading..\" : \"Register Now\"}\n                </Button>\n              </ButtonContainer>\n            </FormGroup>\n          </Slide>\n        </Col>\n      </Row>\n    </GeneratorContainer>\n  );\n};\n\nexport default UserRegister;\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled(\"div\")`\r\n  display: inline-block;\r\n  width: 100%;\r\n  padding: 10px 5px;\r\n`;\r\n\r\nexport const StyledInput = styled(\"input\")`\r\n  font-size: 0.875rem;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledContainer = styled(\"div\")`\r\n  display: inline-block;\r\n  width: 100%;\r\n  padding: 10px 5px;\r\n  margin-bottom: -0.625rem;\r\n`;\r\n\r\nexport const StyledTextArea = styled(\"textarea\")`\r\n  resize: none;\r\n  font-size: 0.875rem;\r\n  height: 185px;\r\n`;\r\n\r\nexport const Label = styled(\"label\")`\r\n  display: block;\r\n  padding-bottom: 10px;\r\n  text-transform: capitalize;\r\n`;\r\n","import { Container, StyledInput } from \"./styles\";\r\nimport { Label } from \"../TextArea/styles\";\r\nimport { InputProps } from \"../types\";\r\n\r\nconst Input = ({ name, placeholder, onChange, type }: InputProps) => (\r\n  <Container>\r\n    <Label htmlFor={name}>{name}</Label>\r\n    <StyledInput\r\n      placeholder={placeholder}\r\n      name={name}\r\n      id={name}\r\n      onChange={onChange}\r\n      type={type}\r\n    />\r\n  </Container>\r\n);\r\n\r\nexport default Input;\r\n"],"sourceRoot":""}